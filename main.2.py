## 4. üéì –£—á–µ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
# –û–ø–∏—Å–∞–Ω–∏–µ:  
# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å—ã Person, Student –∏ Teacher.  
# - Student –Ω–∞—Å–ª–µ–¥—É–µ—Ç Person –∏ –∏–º–µ–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
# - Teacher –Ω–∞—Å–ª–µ–¥—É–µ—Ç Person –∏ –∏–º–µ–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø—Ä–µ–ø–æ–¥–∞—ë—Ç.  
# –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ assign_course(course), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç—É –∏–ª–∏ —É—á–∏—Ç–µ–ª—é.4


# class Person:
#     def __init__(self,firstname,lastname):
#         self.firstname = firstname
#         self.lastname = lastname


# class Student(Person):
#     def __init__(self, firstname, lastname):
#         super().__init__(firstname, lastname)
#         self.courses = []


#     def assign_course(self,course):
#         self.courses.append(course)


#     def get_list(self):
#         return self.courses



# class Teacher(Person):
#    def __init__(self, firstname, lastname):
#         super().__init__(firstname, lastname)
#         self.courses = []


#    def assign_course(self,course):
#        self.courses.append(course)


#    def get_list(self):
#         return self.courses



# st = Student("John","David")
# t = Teacher("Umed","Rajabov")
# st.assign_course("Python")
# t.assign_course("Git")
# print(st.courses)
# print(t.courses)




# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Transport:

# –ê—Ç—Ä–∏–±—É—Ç—ã: name, speed

# –ú–µ—Ç–æ–¥: show_info() ‚Äî –≤—ã–≤–æ–¥–∏—Ç –∏–º—è –∏ —Å–∫–æ—Ä–æ—Å—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞

# –°–æ–∑–¥–∞–π –ø–æ–¥–∫–ª–∞—Å—Å Car, –∫–æ—Ç–æ—Ä—ã–π:

# –ù–∞—Å–ª–µ–¥—É–µ—Ç Transport

# –î–æ–±–∞–≤–ª—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç fuel_type

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Ç–æ–¥ show_info(), —á—Ç–æ–±—ã –æ–Ω —Ç–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–ª fuel_type



# class Transport:
#     def __init__(self,name,speed):
#         self.name = name
#         self.speed = speed

    
#     def info(self):
#         return self.name + " " + self.speed
    

# class Car(Transport):
#     def __init__(self, name, speed,fuel_type):
#         super().__init__(name, speed)
#         self.fuel_type = fuel_type

    
#     def info(self):
#         return self.name + " " + self.speed + " " + self.fuel_type
    




# car = Car("Bmw","210","hello")
# print(car.info())




# ‚úÖ 2. –ß–µ–ª–æ–≤–µ–∫ –∏ —Å—Ç—É–¥–µ–Ω—Ç
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Person:

# –ê—Ç—Ä–∏–±—É—Ç—ã: name, age

# –ú–µ—Ç–æ–¥: introduce() ‚Äî –≤—ã–≤–æ–¥–∏—Ç –ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç {name}

# –°–æ–∑–¥–∞–π –ø–æ–¥–∫–ª–∞—Å—Å Student, –∫–æ—Ç–æ—Ä—ã–π:

# –î–æ–±–∞–≤–ª—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç university

# –î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ study(), –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –Ø —É—á—É—Å—å –≤ {university}



# class Person:
    
#     def __init__(self,name,age):
#         self.name = name
#         self.age = age


#     def introduce(self):
#         return f"–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç {self.name}"
    
# class Student(Person):
#     def __init__(self, name, age,university):
#         super().__init__(name, age)
#         self.university = university


#     def study(self):
#         return f"–Ø —É—á—É—Å—å –≤ {self.university}"


# student = Student("john",21,"Softclub")
# print(student.introduce())
# print(student.study())


# ‚úÖ 3. –ñ–∏–≤–æ—Ç–Ω—ã–µ
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Animal:

# –ê—Ç—Ä–∏–±—É—Ç: name

# –ú–µ—Ç–æ–¥: speak() ‚Äî –≤—ã–≤–æ–¥–∏—Ç –ñ–∏–≤–æ—Ç–Ω–æ–µ –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫

# –°–æ–∑–¥–∞–π –ø–æ–¥–∫–ª–∞—Å—Å Cat, –∫–æ—Ç–æ—Ä—ã–π:

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Ç–æ–¥ speak() —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–æ–¥–∏–ª –ú—è—É


# class Animal:

#     def __init__(self,name):
#         self.name = name

    
#     def speak(self):
#         return "–ñ–∏–≤–æ—Ç–Ω–æ–µ –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫"
    

# class Cat(Animal):

#     def speak(self):
#         return "–ú—è—É"


# cat = Cat("Cat")
# print(cat.speak())


# ‚úÖ 4. –§–∏–≥—É—Ä—ã
# –°–æ–∑–¥–∞–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Shape:

# –ú–µ—Ç–æ–¥: area() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0

# –°–æ–∑–¥–∞–π –¥–≤–∞ –ø–æ–¥–∫–ª–∞—Å—Å–∞:

# Circle ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–∞–¥–∏—É—Å, —Ä–µ–∞–ª–∏–∑—É–µ—Ç area() –∫–∞–∫ œÄ * r¬≤

# Rectangle ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É, —Ä–µ–∞–ª–∏–∑—É–µ—Ç area() –∫–∞–∫ width * height


# class Shape:

#     def area(self):
#         return 0
    
# class Circle(Shape):

#     pi = 3.14

#     def __init__(self,radius):
#         super().__init__()
#         self.radius = radius

#     def area(self):
#         return self.pi * self.radius * self.radius


# class Rectangle(Shape):
    
#     def __init__(self,width,height):
#         super().__init__()
#         self.height = height
#         self.width = width


#     def area(self):
#         return self.width * self.height
    

# cir = Circle(11)
# rec = Rectangle(100,200)
# print(cir.area())
# print(rec.area())


# ‚úÖ 5. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Employee:

# –ê—Ç—Ä–∏–±—É—Ç—ã: name, salary

# –ú–µ—Ç–æ–¥: get_salary() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—É

# –°–æ–∑–¥–∞–π –ø–æ–¥–∫–ª–∞—Å—Å Manager, –∫–æ—Ç–æ—Ä—ã–π:

# –î–æ–±–∞–≤–ª—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç bonus

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç get_salary() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç salary + bonus


# class Employee:

#     def __init__(self,name,salary):
#         self.name = name 
#         self. salary = salary


#     def get_salary(self):
#         return self.salary
    

# class Manager(Employee):

#     def __init__(self, name, salary,bonus):
#         super().__init__(name, salary)
#         self.bonus = bonus

    
#     def get_salary(self):
#         return self.salary + self.bonus
    

# man = Manager("John",1500,300)
# print(man.get_salary())
    


# üü¢ –£—Ä–æ–≤–µ–Ω—å 1: –ë–∞–∑–æ–≤—ã–π
# 1. –ö–ª–∞—Å—Å Student
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Student, –≤ –∫–æ—Ç–æ—Ä–æ–º:

# –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç __grade (–æ—Ü–µ–Ω–∫–∞).

# –ú–µ—Ç–æ–¥ get_grade() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ü–µ–Ω–∫—É.

# –ú–µ—Ç–æ–¥ set_grade() —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ü–µ–Ω–∫—É, –Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç 0 –¥–æ 100.


# class Student:
#     def __init__(self):
#         self.__grade = 0


#     def get_grade(self):
#             return self.__grade
    

#     def set_grade(self,grade):         
#          if 0 <= grade <= 100:
#             self.__grade = grade
#          else:
#               return "eror sum"

              
              

# student = Student()
# print(student.get_grade())
# student.set_grade(50)
# print(student.get_grade())


# 2. –ö–ª–∞—Å—Å Circle
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Circle —Å:

# –ü—Ä–∏–≤–∞—Ç–Ω—ã–º –∞—Ç—Ä–∏–±—É—Ç–æ–º __radius.

# –°–≤–æ–π—Å—Ç–≤–∞–º–∏ radius (getter –∏ setter).

# –í —Å–µ—Ç—Ç–µ—Ä–µ –ø—Ä–æ–≤–µ—Ä—è–π, —á—Ç–æ–±—ã —Ä–∞–¥–∏—É—Å –±—ã–ª –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.


# class Circle:
#     def __init__(self):
#         self.__radius = 0

#     @property
#     def radius(self):
#         return self.__radius

#     @radius.setter
#     def radius(self, value):
#         if value > 0:
#             self.__radius = value
#         else:
#             return 'eror input'

    
# cir = Circle()
# print(cir.radius)
# cir.radius = 10
# print(cir.radius)


# üü° –£—Ä–æ–≤–µ–Ω—å 2: –°—Ä–µ–¥–Ω–∏–π
# 3. –ö–ª–∞—Å—Å Account
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Account, —É –∫–æ—Ç–æ—Ä–æ–≥–æ:

# –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ –ø–æ–ª–µ __balance.

# –ú–µ—Ç–æ–¥ deposit(amount) ‚Äî –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ —Å—É–º–º–∞ > 0).

# –ú–µ—Ç–æ–¥ withdraw(amount) ‚Äî —Å–Ω—è—Ç–∏–µ (–µ—Å–ª–∏ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥).

# –ú–µ—Ç–æ–¥ get_balance() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–ª–∞–Ω—Å.


# class Account:

#     def __init__(self):
#         self.__balnce = 0

#     def deposit(self,amount):
#         self.amount = amount
#         if amount > 0:
#             self.__balnce = amount
#         else:
#             print('eror input!')


#     def withdraw(self,amount):
#         self.amount = amount
#         if self.__balnce >= amount and amount > 0:
#             self.__balnce -= amount
#         else:
#             print('eror input! or no money to balance!')

    
#     def get_balance(self):
#         return self.__balnce



# account = Account()
# print(account.get_balance())
# account.deposit(1500)
# account.withdraw(100)
# print(account.get_balance())


# 4. –ö–ª–∞—Å—Å Temperature
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π:

# –•—Ä–∞–Ω–∏—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –¶–µ–ª—å—Å–∏—è—Ö (__celsius).

# –ò–º–µ–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞:

# celsius ‚Äî –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä.

# fahrenheit ‚Äî —Ç–æ–ª—å–∫–æ –≥–µ—Ç—Ç–µ—Ä (–ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ ¬∞F –ø–æ —Ñ–æ—Ä–º—É–ª–µ C * 9/5 + 32).


# class Temprature:

#     def __init__(self):
#         self.__celsius = 0

    
#     @property
#     def celsius(self):
#         return self.__celsius

#     @celsius.setter
#     def celsius(self,value):
#         self.value = value
#         if value > 0:
#             self.__celsius = value
#         else:
#             print('eror input!')
    
#     @property
#     def fahrenheit(self):
#         return self.__celsius * 9 / 5 + 32
    

# temp = Temprature()
# print(temp.celsius)
# temp.celsius = 25
# print(temp.fahrenheit)




# üî¥ –£—Ä–æ–≤–µ–Ω—å 3: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π
# 5. –ö–ª–∞—Å—Å Product
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Product, —É –∫–æ—Ç–æ—Ä–æ–≥–æ:

# –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–æ–ª—è __name, __price, __discount.

# –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ.

# –ú–µ—Ç–æ–¥ get_final_price() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É —Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å).



# class Product:

#     def __init__(self,):
#         self.__name = None
#         self.__price = 0
#         self.__discount = 0

#     @property
#     def name(self):
#         return self.__name
    
#     @property
#     def price(self):
#         return self.__price
    
#     @property
#     def discount(self):
#         return self.__discount
    
#     @name.setter
#     def name(self,value):
#         self.value = value 
#         if isinstance(value, str):
#            self.__name = value         
    
#     @price.setter
#     def price(self,value):
#         if value > 0:
#            self.__price = value
    
#     @discount.setter
#     def discount(self,value):
#         if value > 0:
#            self.__discount = value


#     def get_final_price(self):
#            return self.__price * (1 - self.__discount / 100)
    


# pro = Product()
# pro.name = 'Laptop'
# pro.price = 2000
# pro.discount = 10
# print(pro.get_final_price())